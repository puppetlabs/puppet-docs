---
canonical: "/references/latest/function.html"
layout: default
title: Function Reference
---


Function Reference
=====


<p><strong>This page is autogenerated; any changes will get overwritten</strong> <em>(last generated on Thu Feb 24 17:23:11 -0800 2011)</em></p>

<p>There are two types of functions in Puppet: Statements and rvalues.
Statements stand on their own and do not return arguments; they are used for
performing stand-alone work like importing.  Rvalues return values and can
only be used in a statement requiring a value, such as an assignment or a case
statement.</p>
<p>Here are the functions available in Puppet:</p>

----------------

### alert

<p>Log a message on the server at level alert.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>


----------------

### crit

<p>Log a message on the server at level crit.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>


----------------

### debug

<p>Log a message on the server at level debug.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>


----------------

### defined

<p>Determine whether a given type is defined, either as a native type or a defined type, or whether a class is defined. This is useful for checking whether a class is defined and only including it if it is. This function can also test whether a resource has been defined, using resource references (e.g., <code>if defined(File['/tmp/myfile']) { ... }</code>).  This function is unfortunately dependent on the parse order of the configuration when testing whether a resource is defined.</p>
<ul>
<li><strong>Type</strong>: rvalue</li>
</ul>


----------------

### emerg

<p>Log a message on the server at level emerg.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>


----------------

### err

<p>Log a message on the server at level err.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>


----------------

### fail

<p>Fail with a parse error.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>


----------------

### file

<p>Return the contents of a file.  Multiple files can be passed, and the first file that exists will be read in.</p>
<ul>
<li><strong>Type</strong>: rvalue</li>
</ul>


----------------

### fqdn_rand

<p>Generates random numbers based on the node's fqdn. The first argument  sets the range.  The second argument specifies a number or string to add to the  seed and is optional.</p>
<ul>
<li><strong>Type</strong>: rvalue</li>
</ul>


----------------

### generate

<p>Calls an external command and returns the results of the command.  Any arguments are passed to the external command as arguments.  If the generator does not exit with return code of 0, the generator is considered to have failed and a parse error is thrown.  Generators can only have file separators, alphanumerics, dashes, and periods in them.  This function will attempt to protect you from malicious generator calls (e.g., those with '..' in them), but it can never be entirely safe.  No subshell is used to execute generators, so all shell metacharacters are passed directly to the generator.</p>
<ul>
<li><strong>Type</strong>: rvalue</li>
</ul>


----------------

### include

<p>Evaluate one or more classes.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>


----------------

### info

<p>Log a message on the server at level info.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>


----------------

### inline_template

<p>Evaluate a template string and return its value.  See <a href="http://docs.puppetlabs.com/guides/templating.html">the templating docs</a> for more information.  Note that  if multiple template strings are specified, their output is all concatenated  and returned as the output of the function.</p>
<ul>
<li><strong>Type</strong>: rvalue</li>
</ul>


----------------

### notice

<p>Log a message on the server at level notice.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>


----------------

### realize

<p>Make a virtual object real.  This is useful when you want to know the name of the virtual object and don't want to bother with a full collection.  It is slightly faster than a collection, and, of course, is a bit shorter.  You must pass the object using a reference; e.g.: <code>realize User[luke]</code>.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>


----------------

### search

<p>Add another namespace for this class to search. This allows you to create classes with sets of definitions and add those classes to another class's search path.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>


----------------

### sha1

<p>Returns a SHA1 hash value from a provided string.</p>
<ul>
<li><strong>Type</strong>: rvalue</li>
</ul>


----------------

### tag

<p>Add the specified tags to the containing class or definition.  All contained objects will then acquire that tag, also.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>


----------------

### tagged

<p>A boolean function that tells you whether the current container is tagged with the specified tags. The tags are ANDed, so that all of the specified tags must be included for the function to return true.</p>
<ul>
<li><strong>Type</strong>: rvalue</li>
</ul>


----------------

### template

<p>Evaluate a template and return its value.  See <a href="http://docs.puppetlabs.com/guides/templating.html">the templating docs</a> for more information.  Note that  if multiple templates are specified, their output is all concatenated  and returned as the output of the function.</p>
<ul>
<li><strong>Type</strong>: rvalue</li>
</ul>


----------------

### warning

<p>Log a message on the server at level warning.</p>
<ul>
<li><strong>Type</strong>: statement</li>
</ul>
<hr />
<p><em>This page autogenerated on Thu Feb 24 17:23:11 -0800 2011</em></p>




